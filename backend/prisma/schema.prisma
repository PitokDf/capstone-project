// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  username  String   @unique @db.VarChar(125)
  password  String
  createdAt DateTime @default(now())
}

model Course {
  id       Int    @id @default(autoincrement())
  code     String @unique
  name     String @db.VarChar(125)
  sks      Int
  duration Int

  Schedules Schedule[]
}

model Lecture {
  id         Int    @id @default(autoincrement())
  nip        String @unique
  name       String
  preference String

  Schedule Schedule[]
}

model Room {
  id       Int    @id @default(autoincrement())
  code     String @unique
  name     String
  capacity String
  location String

  Schedule Schedule[]
}

model TimeSlot {
  id       Int      @id @default(autoincrement())
  day      String
  starTime DateTime
  endTime  DateTime

  Schedule Schedule[]
}

model Schedule {
  id         Int @id @default(autoincrement())
  courseID   Int
  lectureID  Int
  roomID     Int
  timeSlotID Int

  course   Course   @relation(fields: [courseID], references: [id], onDelete: Cascade)
  lecture  Lecture  @relation(fields: [lectureID], references: [id], onDelete: Cascade)
  room     Room     @relation(fields: [roomID], references: [id], onDelete: Cascade)
  timeSlot TimeSlot @relation(fields: [timeSlotID], references: [id], onDelete: Cascade)
}
